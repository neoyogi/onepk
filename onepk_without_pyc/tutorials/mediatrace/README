Mediatrace Tutorial
-------------------

This tutorial will configure and print out the results of a simple
Mediatrace ECHO profile. Mediatrace sends a probe to destination of
path specifier, collects information about nodes in the path, then
reports the information back to the initiator.

Possible probe types:
---------------------
mtrace.ProfileType.ECHO
mtrace.ProfileType.CPU
mtrace.ProfileType.INTERFACE
mtrace.ProfileType.MEMORY
mtrace.ProfileType.PERFMON

Nodes along the path should have initiators and responders turned on
in devices at critical path points for the feature to be most effective.
PERFMON takes special timeout settings and requres actual application 
packets to monitor.

The tutorial is setup to try configuration of mediatrace on router1 of
All-in-One simulator using the vty service set so go ahead and activate 
it or try setting up all mediatrace manually on 3 nodes to see the full
effect!
    -----------------------------------------------------------------
    |conf t                                                           |   
    | onep                                                            |   
    |  service set vty                                                |   
    ------------------------------OR-----------------------------------
    |conf t                                                           |   
    | mediatrace responder                                            |   
    | mediatrace initiator source-ip <IP address of Target interface> |
    | onep                                                            |   
    |  service set mediatrace                                         |   
    -------------------------------------------------------------------

To run this tutorial:

Notes: Make sure that the onep Python module is installed
       Python version supported is 2.7.
    
   Usage:

   SessionTutorial.py -a <element hostname or address> \
         [-t <transport_type>] \
             [-C <client cert file> -K <client private key file> \
             -R <root certificates file>] \
             [-P <tls pinning file>]

    -a <element hostname or address> Network element's hostname or IP address.
    -t <transport type> Transport type (tls|tipc).  Default is TLS.
    -C <client cert file> Client certificate file required TLS client
                          authentication.
    -K <client private key file> Client private key file required for TLS 
                                 client authentication.
    -R <CA certs file> CA certificates file required for TLS.
    
    -P <tls pinning file> option is to provide the location of the pinning file where
    the certificate of remote host can be stored after manual 
    verification by user in case of TLS verification failure .
    To manually verify the certificate, use below command:
    on IOS: "sh crypto pki certificates verbose"
    on NXOS: "sh crypto ca certificates"
    
    The application will prompt the user to enter username and password that 
    are configured on the network element you are connecting to. 

    For more information on how to use TLS connection please refer to the 
     Getting Started Guide.
